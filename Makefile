#############################################################################
# Makefile for building: hw5
# Generated by qmake (2.01a) (Qt 4.6.2) on: Fri Apr 27 20:02:55 2012
# Project:  hw5.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile hw5.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = bighoney.cpp \
		boss.cpp \
		game.cpp \
		heart.cpp \
		honey.cpp \
		m1.cpp \
		m2.cpp \
		m3.cpp \
		m4.cpp \
		main.cpp \
		me.cpp \
		oct.cpp \
		shell.cpp moc_game.cpp
OBJECTS       = bighoney.o \
		boss.o \
		game.o \
		heart.o \
		honey.o \
		m1.o \
		m2.o \
		m3.o \
		m4.o \
		main.o \
		me.o \
		oct.o \
		shell.o \
		moc_game.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		hw5.pro
QMAKE_TARGET  = hw5
DESTDIR       = 
TARGET        = hw5

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: hw5.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile hw5.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile hw5.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/hw51.0.0 || $(MKDIR) .tmp/hw51.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/hw51.0.0/ && $(COPY_FILE) --parents bighoney.h boss.h bullet.h game.h heart.h honey.h m1.h m2.h m3.h m4.h me.h mon.h oct.h shell.h .tmp/hw51.0.0/ && $(COPY_FILE) --parents bighoney.cpp boss.cpp game.cpp heart.cpp honey.cpp m1.cpp m2.cpp m3.cpp m4.cpp main.cpp me.cpp oct.cpp shell.cpp .tmp/hw51.0.0/ && (cd `dirname .tmp/hw51.0.0` && $(TAR) hw51.0.0.tar hw51.0.0 && $(COMPRESS) hw51.0.0.tar) && $(MOVE) `dirname .tmp/hw51.0.0`/hw51.0.0.tar.gz . && $(DEL_FILE) -r .tmp/hw51.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_game.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_game.cpp
moc_game.cpp: mon.h \
		m1.h \
		me.h \
		m2.h \
		bullet.h \
		heart.h \
		honey.h \
		m3.h \
		m4.h \
		shell.h \
		oct.h \
		boss.h \
		bighoney.h \
		game.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) game.h -o moc_game.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

bighoney.o: bighoney.cpp bighoney.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bighoney.o bighoney.cpp

boss.o: boss.cpp boss.h \
		mon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o boss.o boss.cpp

game.o: game.cpp game.h \
		mon.h \
		m1.h \
		me.h \
		m2.h \
		bullet.h \
		heart.h \
		honey.h \
		m3.h \
		m4.h \
		shell.h \
		oct.h \
		boss.h \
		bighoney.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o game.o game.cpp

heart.o: heart.cpp heart.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o heart.o heart.cpp

honey.o: honey.cpp honey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o honey.o honey.cpp

m1.o: m1.cpp m1.h \
		mon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o m1.o m1.cpp

m2.o: m2.cpp m2.h \
		mon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o m2.o m2.cpp

m3.o: m3.cpp m3.h \
		mon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o m3.o m3.cpp

m4.o: m4.cpp m4.h \
		mon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o m4.o m4.cpp

main.o: main.cpp game.h \
		mon.h \
		m1.h \
		me.h \
		m2.h \
		bullet.h \
		heart.h \
		honey.h \
		m3.h \
		m4.h \
		shell.h \
		oct.h \
		boss.h \
		bighoney.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

me.o: me.cpp me.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o me.o me.cpp

oct.o: oct.cpp oct.h \
		mon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o oct.o oct.cpp

shell.o: shell.cpp shell.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o shell.o shell.cpp

moc_game.o: moc_game.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_game.o moc_game.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

